# 20: August Mean Flow
alfinfo <- list(
varkey = "monthly_mean_flow",
propcode = "mm8",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,21] <- alfprop$propvalue
# 21: September Mean Flow
alfinfo <- list(
varkey = "monthly_mean_flow",
propcode = "mm9",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,22] <- alfprop$propvalue
# 22: October Mean Flow
alfinfo <- list(
varkey = "monthly_mean_flow",
propcode = "mm10",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,23] <- alfprop$propvalue
# 23: November Mean Flow
alfinfo <- list(
varkey = "monthly_mean_flow",
propcode = "mm11",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,24] <- alfprop$propvalue
# 24: December Mean Flow
alfinfo <- list(
varkey = "monthly_mean_flow",
propcode = "mm12",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,25] <- alfprop$propvalue
# 25: 1 Day Minimum Low Flow
alfinfo <- list(
varkey = "min_low_flow",
propcode = "min1",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,26] <- alfprop$propvalue
# 26: 1 Day Median Low Flow
alfinfo <- list(
varkey = "med_low_flow",
propcode = "medl1",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,27] <- alfprop$propvalue
# 27: 3 Day Minimum Low Flow
alfinfo <- list(
varkey = "min_low_flow",
propcode = "min3",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,28] <- alfprop$propvalue
# 28: 3 Day Median Low Flow
alfinfo <- list(
varkey = "med_low_flow",
propcode = "medl3",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,29] <- alfprop$propvalue
# 29: 7 Day Minimum Low Flow
alfinfo <- list(
varkey = "min_low_flow",
propcode = "min7",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,30] <- alfprop$propvalue
# 30: 7 Day Median Low Flow
alfinfo <- list(
varkey = "med_low_flow",
propcode = "medl7",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,31] <- alfprop$propvalue
# 31: 30 Day Minimum Low Flow
alfinfo <- list(
varkey = "min_low_flow",
propcode = "min30",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,32] <- alfprop$propvalue
# 32: 30 Day Median Low Flow
alfinfo <- list(
varkey = "med_low_flow",
propcode = "medl30",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,33] <- alfprop$propvalue
# 33: 90 Day Minimum Low Flow
alfinfo <- list(
varkey = "min_low_flow",
propcode = "min90",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,34] <- alfprop$propvalue
# 34: 90 Day Median Low Flow
alfinfo <- list(
varkey = "med_low_flow",
propcode = "medl90",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,35] <- alfprop$propvalue
# 35: 7Q10
alfinfo <- list(
varkey = "7q10",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,36] <- alfprop$propvalue
# 38: 1% Non-Exceedance
alfinfo <- list(
varkey = "non-exceedance",
propcode = "ne1",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,37] <- alfprop$propvalue
# 39: 5% Non-Exceedance
alfinfo <- list(
varkey = "non-exceedance",
propcode = "ne5",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,38] <- alfprop$propvalue
# 40: 50% Non-Exceedance
alfinfo <- list(
varkey = "non-exceedance",
propcode = "ne50",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,39] <- alfprop$propvalue
# 41: 95% Non-Exceedance
alfinfo <- list(
varkey = "non-exceedance",
propcode = "ne95",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,40] <- alfprop$propvalue
# 42: 99% Non-Exceedance
alfinfo <- list(
varkey = "non-exceedance",
propcode = "ne99",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,41] <- alfprop$propvalue
# 43: September 10%
alfinfo <- list(
varkey = "monthly_non-exceedance",
propcode = "mne9_10",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,42] <- alfprop$propvalue
# 44: Mean Baseflow
alfinfo <- list(
varkey = "baseflow",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,43] <- alfprop$propvalue
# 45: January High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh1",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,44] <- alfprop$propvalue
# 46: February High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh2",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,45] <- alfprop$propvalue
# 47: March High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh3",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,46] <- alfprop$propvalue
# 48: April High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh4",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,47] <- alfprop$propvalue
# 49: May High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh5",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,48] <- alfprop$propvalue
# 50: June High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh6",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,49] <- alfprop$propvalue
# 51: July High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh7",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,50] <- alfprop$propvalue
# 52: August High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh8",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,51] <- alfprop$propvalue
# 53: September High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh9",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,52] <- alfprop$propvalue
# 54: October High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh10",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,53] <- alfprop$propvalue
# 55: November High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh11",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,54] <- alfprop$propvalue
# 56: December High Flow
alfinfo <- list(
varkey = "monthly_high_flow",
propcode = "mh12",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,55] <- alfprop$propvalue
# 57: 1 Day Maximum High Flow
alfinfo <- list(
varkey = "max_high_flow",
propcode = "max1",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,56] <- alfprop$propvalue
# 58: 1 Day Median High Flow
alfinfo <- list(
varkey = "med_high_flow",
propcode = "medh1",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,57] <- alfprop$propvalue
# 59: 3 Day Maximum High Flow
alfinfo <- list(
varkey = "max_high_flow",
propcode = "max3",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,58] <- alfprop$propvalue
# 60: 3 Day Median High Flow
alfinfo <- list(
varkey = "med_high_flow",
propcode = "medh3",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,59] <- alfprop$propvalue
# 61: 7 Day Maximum High Flow
alfinfo <- list(
varkey = "max_high_flow",
propcode = "max7",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,60] <- alfprop$propvalue
# 62: 7 Day Median High Flow
alfinfo <- list(
varkey = "med_high_flow",
propcode = "medh7",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,61] <- alfprop$propvalue
# 63: 30 Day Maximum High Flow
alfinfo <- list(
varkey = "max_high_flow",
propcode = "max30",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,62] <- alfprop$propvalue
# 64: 30 Day Maximum High Flow
alfinfo <- list(
varkey = "med_high_flow",
propcode = "medh30",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,63] <- alfprop$propvalue
# 65: 90 Day Maximum High Flow
alfinfo <- list(
varkey = "max_high_flow",
propcode = "max90",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,64] <- alfprop$propvalue
# 66: 90 Day Median High Flow
alfinfo <- list(
varkey = "med_high_flow",
propcode = "medh90",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,65] <- alfprop$propvalue
# 67: Mean Flow in Year of Drought of Record
alfinfo <- list(
varkey = "dor_mean",
featureid = as.integer(as.character(model$pid)),
entity_type = "dh_properties"
)
alfprop <- getProperty(alfinfo, site, alfprop)
all.metrics[1,66] <- alfprop$propvalue
all.errors.all.segments[all.errors.line.no,] <- all.metrics[1,1:num.metrics]
#Normalizing data: dividing all metrics by the contributing drainage area of the river segment
all.errors.all.segments[all.errors.line.no,-num.metrics] <- all.errors.all.segments[all.errors.line.no,-num.metrics]/all.errors.all.segments[all.errors.line.no,num.metrics]
all.errors.line.no <- all.errors.line.no + 1
}
i <- 1
RivSeg <- all.riv.segs[i]
print(paste('Downloading data for segment', i, 'of', num.segs))
# GETTING MODEL DATA FROM VA HYDRO
hydrocode = paste("vahydrosw_wshed_",RivSeg,sep="");
ftype = 'vahydro'; # nhd_huc8, nhd_huc10, vahydro
inputs <- list (
hydrocode = hydrocode,
bundle = 'watershed',
ftype = 'vahydro'
)
#property dataframe returned
feature = FALSE;
odata <- getFeature(inputs, token, site, feature);
hydroid <- odata[1,"hydroid"];
fname <- as.character(odata[1,]$name );
print(paste("Retrieved hydroid",hydroid,"for", fname,RivSeg, sep=' '));
# get the p5.3.2, scenario  model segment attached to this river feature
inputs <- list(
varkey = "om_model_element",
featureid = hydroid,
entity_type = "dh_feature",
propcode = mod.scenario
)
mod.scenario <- 'CFBASE30Y20180615'
# get the p5.3.2, scenario  model segment attached to this river feature
inputs <- list(
varkey = "om_model_element",
featureid = hydroid,
entity_type = "dh_feature",
propcode = mod.scenario
)
token = token
model <- getProperty(inputs, site, model)
info <- read.csv(paste0(cbp6_link, "/data.csv"))
info
info$riv.seg
View(info)
info <- read.csv(paste0(cbp6_link, "/data.csv"))
all.riv.segs <- info$riv.seg
all.riv.segs <- as.vector(info$riv.seg)
rm(list = ls())
library(readxl)
DATA <- read_excel('C:/Users/danie/Documents/MATLAB/Data_for_Lecture4.xlsx')
# Change all -9999 vectors to NaN
DATA2 = as.data.frame(DATA)
# Change all -9999 vectors to NaN -- tibble
for (i in 1:nrow(DATA)) {
for (j in 1:ncol(DATA)) {
if (DATA[i,j] == -9999)
{DATA_NAN[i,j] == NaN}
else {DATA_NAN[i,j] = DATA[i,j]}
}
}
# Change all -9999 vectors to NaN -- tibble
DATA_NAN <- data.frame(Year = numeric(), Population = numeric(), Consumption_GLperMO = numeric())
for (i in 1:nrow(DATA)) {
for (j in 1:ncol(DATA)) {
if (DATA[i,j] == -9999)
{DATA_NAN[i,j] == NaN}
else {DATA_NAN[i,j] = DATA[i,j]}
}
}
CONS_kL_p_y = (DATA_NAN$Consumption_GLperMO*12*10^6)/DATA_NAN$Population
PL_CONS_kL_p_y_byYEAR1 = cbind(colMeans(NEWMAT, na.rm = T))
NEWMAT = matrix(CONS_kL_p_y,12,nrow(DATA_NAN)/12)
PL_CONS_kL_p_y_byYEAR1 = cbind(colMeans(NEWMAT, na.rm = T))
PL_CONS_kL_p_y_byYEAR1
# option 2
INDEX = (floor(DATA_NAN$Year))-1995
library(pracma) # for accummarray
f1 <- function(x) {
mean(x, na.rm = T)
}
PC_CONS_kL_p_y_byYEAR2 = cbind(accumarray(INDEX, CONS_kL_p_y, func = f1))
IND = seq(1, nrow(DATA_NAN), by = 12)
YEAR_NEW = cbind(DATA_NAN$Year[IND])
# trim data to look at 1998 to 2009
YEAR_DROUGHT = YEAR_NEW[3:14,]
PC_CONS_kL_p_y_DROUGHT = PC_CONS_kL_p_y_byYEAR1[3:14,]
PL_CONS_kL_p_y_byYEAR1 = cbind(colMeans(NEWMAT, na.rm = T))
PL_CONS_kL_p_y_byYEAR1
PC_CONS_kL_p_y_DROUGHT = PC_CONS_kL_p_y_byYEAR1[3:14,]
PC_CONS_kL_p_y_byYEAR1 = cbind(colMeans(NEWMAT, na.rm = T))
PC_CONS_kL_p_y_byYEAR1
PC_CONS_kL_p_y_DROUGHT = PC_CONS_kL_p_y_byYEAR1[3:14,]
PC_WATER_SAVINGS_kL_p_y = PC_CONS_kL_p_y_byYEAR1[2,] - PC_CONS_kL_p_y_DROUGHT
# check
DATA_OLD <- read_excel('C:/Users/danie/Documents/MATLAB/Data_for_Lecture2.xlsx')
check_stuff <0 DATA_OLD[2,]
check_stuff <- DATA_OLD[2,]
# check
DATA_OLD <- read_excel('C:/Users/danie/Documents/MATLAB/Data_for_Lecture2.xlsx')
check_stuff <- DATA_OLD[,2]
checker <- PC_WATER_SAVINGS_kL_p_y - check_stuff
View(checker)
