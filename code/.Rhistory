# pull data for each of these 3 month segments.
HighestDifferences <- HighDifference[1:3,]
HighestDifferences$Date <- as.Date(HighestDifferences$Date)
# initalize variables for loop
differenceyear <- data.frame(matrix(nrow=1,ncol=6))
differencedates <- data.frame(matrix(nrow=1, ncol=2))
names(differenceyear)<- c('endyear', 'endmonth', 'enddate', 'startyear', 'startmonth', 'startdate')
names(differencedates)<- c('start date row', 'end date row')
storeplotdata1<- data.frame(matrix(nrow=1, ncol=4))
names(storeplotdata1)<- c('Date', 'Scenario 1 Flow', 'Scenario 2 Flow', 'Counter')
storeplotdata2<- data.frame(matrix(nrow=1, ncol=4))
names(storeplotdata2)<- c('Date', 'Scenario 1 Flow', 'Scenario 2 Flow', 'Counter')
storeplotdata3<- data.frame(matrix(nrow=1, ncol=4))
names(storeplotdata3)<- c('Date', 'Scenario 1 Flow', 'Scenario 2 Flow', 'Counter')
q <- 1
for (q in 1:length(HighestDifferences)){
differenceyear[q,1] <- year(HighestDifferences$Date[q])  # ending year
differenceyear[q,2]<- month(HighestDifferences$Date[q]) + 1 # ending month
differenceyear[q,4]<- year(HighestDifferences$Date[q]) #startyear
differenceyear[q,5]<- month(HighestDifferences$Date[q])-2 #startmonth
if (differenceyear[q,2] > 12) { # if end month is jan, must move year up
differenceyear[q,4] <- differenceyear[q,1]
differenceyear[q,1]<- differenceyear[q,1] + 1 # year for jan moves
differenceyear[q,2] <- 1
}else if (differenceyear[q,5] == -1) {
differenceyear[q,4] <- differenceyear[q,4] - 1 # if january, go back a year and start november
differenceyear[q,5] <- 11
}else if (differenceyear[q,5] == 0) {
differenceyear[q,4] <- differenceyear[q,4] - 1 # if january, go back a year and start november
differenceyear[q,5] <- 12
} else{
differenceyear[q,1]<- differenceyear[q,1]  #endyear
differenceyear[q,2]<- differenceyear[q,2]  #endmonth
differenceyear[q,4]<- differenceyear[q,4]  #startyear
differenceyear[q,5]<- differenceyear[q,5]  #startmonth
}
differenceyear[q,3]<- paste0(differenceyear[q,1], '-',differenceyear[q,2], '-01') #enddate
differenceyear$enddate <- as.Date(differenceyear$enddate)
differenceyear[q,6]<- as.Date(paste0(differenceyear[q,4], '-', differenceyear[q,5], '-01')) #startdate
differenceyear$startdate <- as.Date(differenceyear$startdate)
differencedates[q,1]<- as.character(differenceyear$startdate[q])
differencedates[q,2]<- as.character(differenceyear$enddate[q]-1)
differencedates[q,3]<- which(as.Date(all_data$Date)==as.Date(differencedates$`start date row`[q]))
differencedates[q,4]<- which(as.Date(all_data$Date)==as.Date(differencedates$`end date row`[q]))
plot1<-all_data[differencedates$V3[q]:differencedates$V4[q],]
if (q==1){
storeplotdata1<- plot1
}else if(q==2){
storeplotdata2<- plot1
}else if(q==3){
storeplotdata3<- plot1
}
q <- q+1
}
difference1 <- signif(HighestDifferences$Difference[1], digits=3)     #Create difference variable to display on graph
difference2 <- signif(HighestDifferences$Difference[2], digits=3)
difference3 <- signif(HighestDifferences$Difference[3], digits=3)
# CREATES OUTPUT MATRIX -------------------------------------------------------
avg_scenario1 <- mean(data1$flow)
avg_scenario2 <- mean(data2$flow)
# Loading Necessary Packages
library(dataRetrieval)
library(lubridate)
library(plyr)
library(zoo)
library(knitr)
library(ggplot2)
library(stats)
library(lfstat)
library(rstudioapi)
library(IHA)
library(PearsonDS)
library(lfstat)
library(scales)
library(readr)
library(httr)
library(dplyr)
library(stringr)
library(RCurl)
# INPUTS
riv.seg <- 'JU3_7490_7400'
mod.phase1 <- 'p6/p6_gb604/tmp'
mod.scenario1 <- 'CFBASE30Y20180615'
mod.phase2 <- 'p6/p6_gb604/tmp'
mod.scenario2 <- 'CBASE1808L55CY55R45P50R45P50Y'
start.date <- '1984-01-01'
end.date <- '2000-12-31'
site_number <- '02018000'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
# SETUP
# SETUP
# Setting active directory
# Setting working directory to the source file location
container1 ="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github";
container2 = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
# Sourcing functions
source(paste0(container2,"/cbp6_functions.R"))
# Should new or original data be used?
new.or.original <- "new"
# CARRYOVER IF MASTER IS BEING RUN ----------------------------------------
if (exists("container.master") == TRUE) {
container1 <- container.master
riv.seg <- riv.seg.master
new.or.original <- new.or.original.master
}
#retrieve rest token
source(paste0(container1, "/auth.private"));
token <- rest_token(site_url, token, rest_uname, rest_pw);
options(timeout=120); # set timeout to twice default level to avoid abort due to high traffic
# Loading written gage description
description <- read_file(paste0(cbp6_link, "/gage_descriptions/", site_number, ".txt"))
# Generating gage location maps
gis_img <- fn_gage_and_seg_mapper(RivSeg = riv.seg, site = site_url, cbp6_link, token)
```{r,  include=FALSE}
# Loading Necessary Packages
library(dataRetrieval)
library(lubridate)
library(plyr)
library(zoo)
library(knitr)
library(ggplot2)
library(stats)
library(lfstat)
library(rstudioapi)
library(IHA)
library(PearsonDS)
library(lfstat)
library(scales)
library(readr)
library(httr)
library(dplyr)
library(stringr)
library(RCurl)
# INPUTS
riv.seg <- 'JU3_7490_7400'
mod.phase1 <- 'p6/p6_gb604/tmp'
mod.scenario1 <- 'CFBASE30Y20180615'
mod.phase2 <- 'p6/p6_gb604/tmp'
mod.scenario2 <- 'CBASE1808L55CY55R45P50R45P50Y'
start.date <- '1984-01-01'
end.date <- '2000-12-31'
site_number <- '02018000'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
# SETUP
# SETUP
# Setting active directory
# Setting working directory to the source file location
container1 ="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github";
container2 = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
# Sourcing functions
source(paste0(container2,"/cbp6_functions.R"))
# Should new or original data be used?
new.or.original <- "new"
# CARRYOVER IF MASTER IS BEING RUN ----------------------------------------
if (exists("container.master") == TRUE) {
container1 <- container.master
riv.seg <- riv.seg.master
new.or.original <- new.or.original.master
}
# LOADING DATA ------------------------------------------------------------
data1 <- model_import_data_cfs(riv.seg, mod.phase1, mod.scenario1, start.date, end.date)
data2 <- model_import_data_cfs(riv.seg, mod.phase2, mod.scenario2, start.date, end.date)
data1 <- water_year_trim(data1)
data2 <- water_year_trim(data2)
metrics1 <- metrics_calc_all(data1)
metrics2 <- metrics_calc_all(data2)
percent_difference <- metrics_compare(metrics1, metrics2)
# initialize variables ----------------------------------------------------
# This section will create a hydrograph that will zoom in on 3 month segments where difference is high
# It does so for the top three highest difference periods
#all_data puts scenario flows and corresponding dates in one data frame
all_data <- data.frame(data1$date, data1$flow, data2$flow)
all_data$counter <- 1:length(all_data$data1.date) # counter fixes issues with row numbers later on in script
colnames(all_data) <- c('Date', 'Scenario 1 Flow', 'Scenario 2 Flow', 'Counter')
# find the first date for which data is collected, (in date format)
# and a date that is roughly one year and two months past the first date
YearStart <- as.character(as.Date(all_data$Date[1]))
fixer <- as.numeric(which(all_data$Date == paste0((year(YearStart)+1),"-11-30")))
YearEnd <- as.character(as.Date(all_data$Date[fixer]))
# YearStart_Row and YearEnd_Row are the rows corresponding the the YearStart and YearEnd dates
YearStart_Row <- as.numeric(which(all_data$Date==YearStart))
YearEnd_Row <- as.numeric(which(all_data$Date==YearEnd))
# initalize dataframes and counters, assign names for dataframe columns
#AvgMonthlyDifference: used within nested for loop to create a 1x12 matrix that holds 1 year of 3 month difference segments
#Timespan_Difference: used in large loop to store values from AvgMonthlyDifference; holds entire timespan of 3 month difference segments
AvgMonthlyDifference <- data.frame(matrix(nrow=1,ncol=1));
names(AvgMonthlyDifference)<-'Difference'
Timespan_Difference <- data.frame(matrix(nrow=1, ncol=1));
names(Timespan_Difference)<-'Difference'
i <- 1; # used for first for loop to advance a year
x <- 1 # x and y used to advance dataframes
y <- 12
# start loops used for yearly and monthly data  -------------------------------------------------------------
loop <- as.numeric(round(length(data1$date)/365, digits = 0))-1
for (i in 1:loop){                                # run loop for an entire data series
year <- all_data[YearStart_Row:YearEnd_Row,] # specify year: 10-01-year1 to 11-30-year2
m <- 1                                        # counter for nested loop
MonthStart <- YearStart  # first date for 3 month timespan
doi <- as.Date(MonthStart)
doi <- doi + seq(0,365,31)
# doi= date of interest. dummy variable just to create the function next.month
next.month <- function(doi) as.Date(as.yearmon(doi) + 1/12) +  as.numeric(as.Date(doi)-(as.Date(as.yearmon(doi))))
#(re)initalize variables for the nested loop
MonthEnd <-data.frame(next.month(doi));  # last date in 3 month timespan - used function to determine 3rd month
MonthEnd <- MonthEnd[3,1]-2 # specifies end of month 3 as last date
# (technically specifies 01 of month 4)
# row numbers corresponding with start and end dates, as a number. See note below
MonthStart_Row <- as.numeric(which(as.Date(all_data$Date)==as.Date(MonthStart)))
MonthEnd_Row <- as.numeric(which(as.Date(all_data$Date)==as.Date(MonthEnd)))
# Note: Counter column is used here to specify which row starts MonthStart and MonthEnd_Row.
# When rows are pulled from year row numbers are also pulled,
# so a counter must be used for proper row numbers.
Start_new <- as.numeric(which(year$Counter==MonthStart_Row))
End_new <- as.numeric(which(year$Counter==MonthEnd_Row))
# begin nested loop
for (m in 1:12){
month_time <- year[Start_new:End_new ,]         #extract data for 3 month timespan within year of interest
avgmonth_scenario1 <- mean(month_time$`Scenario 1 Flow`)   # find average of scenario 1 flow for 3 months
avgmonth_scenario2 <- mean(month_time$`Scenario 2 Flow`) # find average of scenario 2 flow for 3 months
AvgMonthlyDifference[m,1] <- (avgmonth_scenario1 - avgmonth_scenario2)/ avgmonth_scenario1 * 100  # percent difference between scenarios
MonthEnd<-as.Date(MonthEnd)
MonthEnd<-MonthEnd+1
MonthEndyear <- year(MonthEnd)   # Year associated with last month of extracted data
MonthEndmonth <- month(MonthEnd) # Month associated with last month of extracted data
# the next three lines are for the difference calculations -- stop on 1st of month 4 (31 of month 3)
# Note: this DOES include the 1st of the next month in difference calculation
# Put a control on what date the script advances by - if date is not 1st of month, reset it
DateCheck <- as.Date(paste0(MonthEndyear,'-',MonthEndmonth,'-01'))
if (MonthEnd != DateCheck)
MonthEnd <- as.Date(paste0(MonthEndyear,'-', MonthEndmonth, '-01'))
MonthEnd <- MonthEnd-1
stopdate <- as.Date(MonthEnd)
AvgMonthlyDifference[m,2] <- stopdate
# Advance to next month or count
MonthStart <- next.month(MonthStart)
MonthEnd <- MonthEnd+1
MonthEnd <- next.month(MonthEnd)
MonthEnd <- MonthEnd-1
StartMonth_Row <- which(as.Date(all_data$Date)==as.Date(MonthStart));
StartMonth_Row <- as.numeric(StartMonth_Row)
EndMonth_Row <- which(as.Date(all_data$Date)==as.Date(MonthEnd));
EndMonth_Row <- as.numeric(EndMonth_Row)
Start_new <- which(year$Counter==StartMonth_Row)
End_new <- which(year$Counter==EndMonth_Row)
m <- m + 1
}
Timespan_Difference[x:y, 1] <- AvgMonthlyDifference[,1] # save the difference entries from AvgMonthlyDifference
Timespan_Difference[x:y, 2] <- AvgMonthlyDifference[,2] # save the dates
# advance Timespan_Difference for next run
x <- x + 12
y <- y + 12
YearStart <- as.Date(YearStart) + 365  # Advance 1 year
YearEnd <- as.Date(YearEnd) + 365     # Advance 1 year & 2 months (from 10-01 to 11-30)
# Put a control on what date the script advances by - if end date is not 11-30, reset it
# - if begin date is not -10-01, reset it
YearBeginyear <- year(YearStart)  # pull year of beginning year
YearBeginCheck <- as.Date(paste0(YearBeginyear,'-10-01'))
if (YearBeginyear != YearBeginCheck)
YearStart <- as.Date(paste0(YearBeginyear,'-10-01'))
YearEndyear <- year(YearEnd)  # pull year of ending year
YearEndCheck <- as.Date(paste0(YearEndyear,'-11-30'))
if (YearEnd != YearEndCheck)
YearEnd <- as.Date(paste0(YearEndyear,'-11-30'))
YearStart_Row <- which(as.Date(all_data$Date)== as.Date(YearStart))
YearEnd_Row <- which(as.Date(all_data$Date) == as.Date(YearEnd))
i <- i + 1
}
# This section of code will plot timeframes with high difference.
# count the number of 3 month periods over 20% difference, plot the highest 3 periods.
Timespan_Difference$Logic <- Timespan_Difference$Difference>=20 | Timespan_Difference$Difference<= -20
over20 <- Timespan_Difference[Timespan_Difference$Logic=='TRUE',]
HighDifference <- Timespan_Difference[order(abs(Timespan_Difference$Difference), decreasing = TRUE),]
names(HighDifference)<-c('Difference', 'Date', 'Logic')
# pull data for each of these 3 month segments.
HighestDifferences <- HighDifference[1:3,]
HighestDifferences$Date <- as.Date(HighestDifferences$Date)
# initalize variables for loop
differenceyear <- data.frame(matrix(nrow=1,ncol=6))
differencedates <- data.frame(matrix(nrow=1, ncol=2))
names(differenceyear)<- c('endyear', 'endmonth', 'enddate', 'startyear', 'startmonth', 'startdate')
names(differencedates)<- c('start date row', 'end date row')
storeplotdata1<- data.frame(matrix(nrow=1, ncol=4))
names(storeplotdata1)<- c('Date', 'Scenario 1 Flow', 'Scenario 2 Flow', 'Counter')
storeplotdata2<- data.frame(matrix(nrow=1, ncol=4))
names(storeplotdata2)<- c('Date', 'Scenario 1 Flow', 'Scenario 2 Flow', 'Counter')
storeplotdata3<- data.frame(matrix(nrow=1, ncol=4))
names(storeplotdata3)<- c('Date', 'Scenario 1 Flow', 'Scenario 2 Flow', 'Counter')
q <- 1
for (q in 1:length(HighestDifferences)){
differenceyear[q,1] <- year(HighestDifferences$Date[q])  # ending year
differenceyear[q,2]<- month(HighestDifferences$Date[q]) + 1 # ending month
differenceyear[q,4]<- year(HighestDifferences$Date[q]) #startyear
differenceyear[q,5]<- month(HighestDifferences$Date[q])-2 #startmonth
if (differenceyear[q,2] > 12) { # if end month is jan, must move year up
differenceyear[q,4] <- differenceyear[q,1]
differenceyear[q,1]<- differenceyear[q,1] + 1 # year for jan moves
differenceyear[q,2] <- 1
}else if (differenceyear[q,5] == -1) {
differenceyear[q,4] <- differenceyear[q,4] - 1 # if january, go back a year and start november
differenceyear[q,5] <- 11
}else if (differenceyear[q,5] == 0) {
differenceyear[q,4] <- differenceyear[q,4] - 1 # if january, go back a year and start november
differenceyear[q,5] <- 12
} else{
differenceyear[q,1]<- differenceyear[q,1]  #endyear
differenceyear[q,2]<- differenceyear[q,2]  #endmonth
differenceyear[q,4]<- differenceyear[q,4]  #startyear
differenceyear[q,5]<- differenceyear[q,5]  #startmonth
}
differenceyear[q,3]<- paste0(differenceyear[q,1], '-',differenceyear[q,2], '-01') #enddate
differenceyear$enddate <- as.Date(differenceyear$enddate)
differenceyear[q,6]<- as.Date(paste0(differenceyear[q,4], '-', differenceyear[q,5], '-01')) #startdate
differenceyear$startdate <- as.Date(differenceyear$startdate)
differencedates[q,1]<- as.character(differenceyear$startdate[q])
differencedates[q,2]<- as.character(differenceyear$enddate[q]-1)
differencedates[q,3]<- which(as.Date(all_data$Date)==as.Date(differencedates$`start date row`[q]))
differencedates[q,4]<- which(as.Date(all_data$Date)==as.Date(differencedates$`end date row`[q]))
plot1<-all_data[differencedates$V3[q]:differencedates$V4[q],]
if (q==1){
storeplotdata1<- plot1
}else if(q==2){
storeplotdata2<- plot1
}else if(q==3){
storeplotdata3<- plot1
}
q <- q+1
}
# # create and export 3 plots: \plot for info of row q
difference1 <- signif(HighestDifferences$Difference[1], digits=3)     #Create difference variable to display on graph
difference2 <- signif(HighestDifferences$Difference[2], digits=3)
difference3 <- signif(HighestDifferences$Difference[3], digits=3)
# CREATES OUTPUT MATRIX -------------------------------------------------------
avg_scenario1 <- mean(data1$flow)
avg_scenario2 <- mean(data2$flow)
# also want to list the number of timespans that were over 20% difference.
over20 <- signif(nrow(over20)/nrow(Timespan_Difference)*100, digits=3)
OUTPUT_MATRIX <- matrix(c(avg_scenario1, avg_scenario2, over20), nrow=1, ncol=3)
rownames(OUTPUT_MATRIX) = c("Flow")
colnames(OUTPUT_MATRIX) = c('Scenario 1', 'Scenario 2', 'Difference>20 (%)')
overall_difference <- signif((OUTPUT_MATRIX[1,1]-OUTPUT_MATRIX[1,2])/OUTPUT_MATRIX[1,1]*100, digits=3)
OUTPUT_MATRIX <- matrix(c(over20, percent_difference[3,]), nrow=1, ncol=2)
rownames(OUTPUT_MATRIX) = c("Percent")
colnames(OUTPUT_MATRIX) = c('Difference > 20%', 'Overall Difference')
OUTPUT_MATRIX <- signif(as.numeric(OUTPUT_MATRIX, digits = 2))
OUTPUT_MATRIXsaver <- OUTPUT_MATRIX
?paste
?is.character
?readline
?add_headers
??add_headers
?content
??content
# Loading Necessary Packages
library(dataRetrieval)
library(lubridate)
library(plyr)
library(zoo)
library(knitr)
library(ggplot2)
library(stats)
library(lfstat)
library(rstudioapi)
library(IHA)
library(PearsonDS)
library(lfstat)
library(scales)
library(readr)
library(httr)
library(dplyr)
library(stringr)
library(RCurl)
library(rgeos)
library(ggmap)
library(ggsn)
library(sp)
library(rlist)
riv.seg <- 'DE0_3791_0001_0111'
mod.phase1 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario1 <- 'CFBASE30Y20180615' #or "p532cal_062211" (phase 5)
mod.phase2 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario2 <- 'CBASE1808L55CY55R45P50R45P50Y' #or "p532cal_062211" (phase 5)
start.date <- '1984-01-01'
end.date <- '2000-12-31'
site_number <- '01483700'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
area <- readNWISsite(site_number);
area <- area$`drain_area_va` #sq. miles
area <- area*27878400 #sq ft
container1 ="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github";
container2 = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
# Sourcing functions
source(paste0(container2,"/cbp6_functions.R"))
# Should new or original data be used?
new.or.original <- "new"
# CARRYOVER IF MASTER IS BEING RUN ----------------------------------------
if (exists("container.master") == TRUE) {
container1 <- container.master
riv.seg <- riv.seg.master
new.or.original <- new.or.original.master
}
data1 <- model_import_data_cfs(riv.seg, mod.phase1, mod.scenario1, start.date, end.date)
# Loading Necessary Packages
library(dataRetrieval)
library(lubridate)
library(plyr)
library(zoo)
library(knitr)
library(ggplot2)
library(stats)
library(lfstat)
library(rstudioapi)
library(IHA)
library(PearsonDS)
library(lfstat)
library(scales)
library(readr)
library(httr)
library(dplyr)
library(stringr)
library(RCurl)
library(rgeos)
library(ggmap)
library(ggsn)
library(sp)
library(rlist)
# INPUTS
riv.seg <- 'EL0_4560_4562'
mod.phase1 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario1 <- 'CFBASE30Y20180615' #or "p532cal_062211" (phase 5)
mod.phase2 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario2 <- 'CBASE1808L55CY55R45P50R45P50Y' #or "p532cal_062211" (phase 5)
start.date <- '1984-01-01'
end.date <- '2000-12-31'
site_number <- '01487000'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
area <- readNWISsite(site_number);
area <- area$`drain_area_va` #sq. miles
area <- area*27878400 #sq ft
# SETUP
# SETUP
# Setting active directory
# Setting working directory to the source file location
container1 ="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github";
container2 = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
# Sourcing functions
source(paste0(container2,"/cbp6_functions.R"))
# Should new or original data be used?
new.or.original <- "new"
# CARRYOVER IF MASTER IS BEING RUN ----------------------------------------
if (exists("container.master") == TRUE) {
container1 <- container.master
riv.seg <- riv.seg.master
new.or.original <- new.or.original.master
}
data1 <- model_import_data_cfs(riv.seg, mod.phase1, mod.scenario1, start.date, end.date)
data2 <- model_import_data_cfs(riv.seg, mod.phase2, mod.scenario2, start.date, end.date)
data1 <- water_year_trim(data1)
data2 <- water_year_trim(data2)
#retrieve rest token
source(paste0(container1, "/auth.private"));
token <- rest_token(site_url, token, rest_uname, rest_pw);
options(timeout=120); # set timeout to twice default level to avoid abort due to high traffic
# Loading written gage description
description <- read_file(paste0(cbp6_link, "/gage_descriptions/", site_number, ".txt"))
# Generating gage location maps
gis_img <- fn_gage_and_seg_mapper(riv.seg, site_number, site_url, cbp6_link)
automated_dashboard <- function(mod.phase1, mod.scenario1, mod.phase2, mod.scenario2, start.date, end.date, cbp6_link, site_url) {
# SETUP
# SETUP
# Setting active directory
# Setting working directory to the source file location
container1 ="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github";
container2 = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
# Sourcing functions
source(paste0(container2,"/cbp6_functions.R"))
# #retrieve rest token
# source(paste0(container1, "/auth.private"));
#
# #load rest username and password, contained in auth.private file
#
# token <- rest_token(site_url, token, rest_uname, rest_pw);
# options(timeout=120); # set timeout to twice default level to avoid abort due to high traffic
info <- read.csv("C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code\\data.csv")
master.table <- data.frame()
counter <- 1
while (counter <= 1) { #change to number of rows on full csv
riv.seg <- as.character(info[counter,1]) #input for model data import
site_number <- paste0("0",info[counter,2]) #input for model data import
rmarkdown::render(paste0("Working_Dashboard_2019.Rmd"), "pdf_document", output_dir = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code", output_file = paste0(riv.seg, ".pdf"))
# LOADING DATA ------------------------------------------------------------
data1 <- model_import_data_cfs(riv.seg, mod.phase1, mod.scenario1, start.date, end.date)
data2 <- model_import_data_cfs(riv.seg, mod.phase2, mod.scenario2, start.date, end.date)
data1 <- water_year_trim(data1)
data2 <- water_year_trim(data2)
metrics1 <- metrics_calc_all(data1) #calculate metrics into a matrix
metrics2 <- metrics_calc_all(data2)
all_metrics <- metrics_compare(metrics1, metrics2)
# table.metrics1 <- data.frame(riv.seg,metrics1[1,1],metrics1[1,67],metrics1[1,61],metrics1[1,59]) #create row to add to overall dataframe
# table.metrics2 <- data.frame(riv.seg,metrics2[1,1],metrics2[1,67],metrics2[1,61],metrics2[1,59]) #create row to add to overall dataframe
# colnames(table.metrics1) <- c('River Segment', 'Overall Mean Flow', 'Mean Baseflow', 'September 10%', '7Q10')
# colnames(table.metrics2) <- c('River Segment', 'Overall Mean Flow', 'Mean Baseflow', 'September 10%', '7Q10')
master.table <- rbind(master.table, all_metrics, stringsAsFactors = FALSE)
counter <- counter + 1
}
}
automated_dashboard('p6/p6_gb604', 'CFBASE30Y20180615', 'p6/p6_gb604', 'CBASE1808L55CY55R45P50R45P50Y', '1984-01-01', '2000-12-31', "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code", "http://deq2.bse.vt.edu/d.dh")
setwd("C:/Users/Kevin D'Andrea/Desktop/HARP/GitHub/cbp6/code")
automated_dashboard('p6/p6_gb604', 'CFBASE30Y20180615', 'p6/p6_gb604', 'CBASE1808L55CY55R45P50R45P50Y', '1984-01-01', '2000-12-31', "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code", "http://deq2.bse.vt.edu/d.dh")
