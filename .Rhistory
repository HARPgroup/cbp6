library(sp)
library(rlist)
# INPUTS
riv.seg <- 'BS1_8730_8540'
mod.phase1 <- 'p532c-sova' #or "p532c-sova" (phase 5)
mod.scenario1 <- 'p532cal_062211' #or "p532cal_062211" (phase 5)
mod.phase2 <- 'p532c-sova' #or "p532c-sova" (phase 5)
mod.scenario2 <- 'p532cal_062211' #or "p532cal_062211" (phase 5)
start.date <- '1984-01-01'
end.date <- '2005-12-31'
site_number <- '03208950'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
area <- readNWISsite(site_number); area <- area$`drain_area_va` #sq. miles
area <- area*27878400 #sq ft
# SETUP
# SETUP
# Setting active directory
# Setting working directory to the source file location
container1 ="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github";
container2 = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
# Sourcing functions
source(paste0(container2,"/cbp6_functions.R"))
# Should new or original data be used?
new.or.original <- "new"
# CARRYOVER IF MASTER IS BEING RUN ----------------------------------------
if (exists("container.master") == TRUE) {
container1 <- container.master
riv.seg <- riv.seg.master
new.or.original <- new.or.original.master
}
# LOADING DATA ------------------------------------------------------------
data1 <- model_import_data_cfs(riv.seg, mod.phase1, mod.scenario1, start.date, end.date)
data2 <- model_import_data_cfs(riv.seg, mod.phase2, mod.scenario2, start.date, end.date)
data1 <- water_year_trim(data1)
data2 <- water_year_trim(data2)
#retrieve rest token
source(paste0(container1, "/auth.private"));
token <- rest_token(site_url, token, rest_uname, rest_pw);
options(timeout=120); # set timeout to twice default level to avoid abort due to high traffic
# Loading written gage description
description <- read_file(paste0(cbp6_link, "/gage_descriptions/", site_number, ".txt"))
# Generating gage location maps
gis_img <- fn_gage_and_seg_mapper(riv.seg, site_number, site_url, cbp6_link)
site_number <- '03207800'
riv.seg <- 'BS3_8350_8330'
basepath="C:\\Users\\Kevin D'Andrea\\Documents\\HARP\\GitHub\\hydro-tools"
combined.flows <- read.csv(paste0(basepath, "\\HARP-2018\\DEQ_Model_vs_USGS_Comparison\\data\\original_(reproducible)_data\\derived_data\\trimmed+area-adjusted_data\\", site_number, "_vs_", riv.seg, " - Derived Data.csv"))
basepath="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\GitHub\\hydro-tools"
combined.flows <- read.csv(paste0(basepath, "\\HARP-2018\\DEQ_Model_vs_USGS_Comparison\\data\\original_(reproducible)_data\\derived_data\\trimmed+area-adjusted_data\\", site_number, "_vs_", riv.seg, " - Derived Data.csv"))
combined.flows$Date <- as.Date(combined.flows$date, format="%Y-%m-%d")
data <- combined.flows[complete.cases(combined.flows),]
data1 <- data
data2 <- data
metrics1
# SETUP
# SETUP
# Setting active directory
# Setting working directory to the source file location
container1 ="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github";
container2 = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
# Sourcing functions
source(paste0(container2,"/cbp6_functions.R"))
# Should new or original data be used?
new.or.original <- "new"
# CARRYOVER IF MASTER IS BEING RUN ----------------------------------------
if (exists("container.master") == TRUE) {
container1 <- container.master
riv.seg <- riv.seg.master
new.or.original <- new.or.original.master
}
# Creating Data Frame with calculated metrics
metrics1 <- metrics_calc_all(data1)
# data1 <- model_import_data_cfs(riv.seg, mod.phase1, mod.scenario1, start.date, end.date)
# data2 <- model_import_data_cfs(riv.seg, mod.phase2, mod.scenario2, start.date, end.date)
#
data1 <- water_year_trim(data1)
data2 <- water_year_trim(data2)
# Creating Data Frame with calculated metrics
metrics1 <- metrics_calc_all(data1)
# Loading Necessary Packages
library(dataRetrieval)
library(lubridate)
library(plyr)
library(zoo)
library(knitr)
library(ggplot2)
library(stats)
library(lfstat)
library(rstudioapi)
library(IHA)
library(PearsonDS)
library(lfstat)
library(scales)
library(readr)
library(httr)
library(dplyr)
library(stringr)
library(RCurl)
library(rgeos)
library(ggmap)
library(ggsn)
library(sp)
library(rlist)
# INPUTS
riv.seg <- 'BS3_8350_8330'
mod.phase1 <- 'p532c-sova' #or "p532c-sova" (phase 5)
mod.scenario1 <- 'p532cal_062211' #or "p532cal_062211" (phase 5)
mod.phase2 <- 'p532c-sova' #or "p532c-sova" (phase 5)
mod.scenario2 <- 'p532cal_062211' #or "p532cal_062211" (phase 5)
start.date <- '1984-01-01'
end.date <- '2005-12-31'
site_number <- '03207800'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
hydrotools_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\hydro-tools\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
area <- readNWISsite(site_number); area <- area$`drain_area_va` #sq. miles
area <- area*27878400 #sq ft
# SETUP
# SETUP
# Setting active directory
# Setting working directory to the source file location
container1 ="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github";
container2 = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
# Sourcing functions
source(paste0(container2,"/cbp6_functions.R"))
# Should new or original data be used?
new.or.original <- "new"
# CARRYOVER IF MASTER IS BEING RUN ----------------------------------------
if (exists("container.master") == TRUE) {
container1 <- container.master
riv.seg <- riv.seg.master
new.or.original <- new.or.original.master
}
# Creating Data Frame with calculated metrics
metrics1 <- metrics_calc_all(data1)
metrics2 <- metrics_calc_all(data2)
basepath="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\GitHub\\hydro-tools"
combined.flows <- read.csv(paste0(basepath, "\\HARP-2018\\DEQ_Model_vs_USGS_Comparison\\data\\original_(reproducible)_data\\derived_data\\trimmed+area-adjusted_data\\", site_number, "_vs_", riv.seg, " - Derived Data.csv"))
combined.flows$Date <- as.Date(combined.flows$date, format="%Y-%m-%d")
data <- combined.flows[complete.cases(combined.flows),]
data.length <- length(data$Date)
start.month <- month(data$Date[1])
end.month <- month(data$Date[data.length])
start.day <- day(data$Date[1])
end.day <- day(data$Date[data.length])
if (start.month <= 9) {
start.year <- year(data$Date[1])
} else if (start.month == 10 & start.day == 1) {
start.year <- year(data$Date[1])
} else {
start.year <- year(data$Date[1]) + 1
}
if (end.month >= 10) {
end.year <- year(data$Date[data.length])
} else if (end.month == 9 & end.day == 30) {
end.year <- year(data$Date[data.length])
} else {
end.year <- year(data$Date[data.length]) - 1
}
start.date <- paste0(start.year, "-10-01")
end.date <- paste0(end.year, "-09-30")
start.line <- which(data$Date == start.date)
end.line <- which(data$Date == end.date)
data <- data[start.line:end.line,]
data <- data1
data <- data2
# Creating Data Frame with calculated metrics
metrics1 <- metrics_calc_all(data1)
View(data1)
data1 <- data1[,-4]
basepath="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\GitHub\\hydro-tools"
combined.flows <- read.csv(paste0(basepath, "\\HARP-2018\\DEQ_Model_vs_USGS_Comparison\\data\\original_(reproducible)_data\\derived_data\\trimmed+area-adjusted_data\\", site_number, "_vs_", riv.seg, " - Derived Data.csv"))
combined.flows$Date <- as.Date(combined.flows$date, format="%Y-%m-%d")
data <- combined.flows[complete.cases(combined.flows),]
data.length <- length(data$Date)
start.month <- month(data$Date[1])
end.month <- month(data$Date[data.length])
start.day <- day(data$Date[1])
end.day <- day(data$Date[data.length])
if (start.month <= 9) {
start.year <- year(data$Date[1])
} else if (start.month == 10 & start.day == 1) {
start.year <- year(data$Date[1])
} else {
start.year <- year(data$Date[1]) + 1
}
if (end.month >= 10) {
end.year <- year(data$Date[data.length])
} else if (end.month == 9 & end.day == 30) {
end.year <- year(data$Date[data.length])
} else {
end.year <- year(data$Date[data.length]) - 1
}
start.date <- paste0(start.year, "-10-01")
end.date <- paste0(end.year, "-09-30")
start.line <- which(data$Date == start.date)
end.line <- which(data$Date == end.date)
data <- data[start.line:end.line,]
data <- data1
data <- data2
data1 <- data
data1 <- data1[,-1]
data1 <- data1[,-2]
data1 <- data1[,-3]
data2 <- data
data2 <- data2[,-1]
data2 <- data2[,-2]
data2 <- data2[,-3]
View(data1)
View(data2)
colnames(data1) <- c('date', 'flow')
colnames(data2) <- c('date', 'flow')
View(data1)
# Creating Data Frame with calculated metrics
metrics1 <- metrics_calc_all(data1)
metrics2 <- metrics_calc_all(data2)
percent_difference <- metrics_compare(metrics1, metrics2)
# OUTPUT TABLES -----
# Table 1: Monthly Average Flow
Table1 <- matrix(c(percent_difference[1,1], percent_difference[1,14], percent_difference[1,15], percent_difference[1,16], percent_difference[1,17], percent_difference[1,18], percent_difference[1,19], percent_difference[1,20], percent_difference[1,21], percent_difference[1,22], percent_difference[1,23], percent_difference[1,24], percent_difference[1,25], percent_difference[2,1], percent_difference[2,14], percent_difference[2,15], percent_difference[2,16], percent_difference[2,17], percent_difference[2,18], percent_difference[2,19], percent_difference[2,20], percent_difference[2,21], percent_difference[2,22], percent_difference[2,23], percent_difference[2,24], percent_difference[2,25], percent_difference[3,1], percent_difference[3,14], percent_difference[3,15], percent_difference[3,16], percent_difference[3,17], percent_difference[3,18], percent_difference[3,19], percent_difference[3,20], percent_difference[3,21], percent_difference[3,22], percent_difference[3,23], percent_difference[3,24], percent_difference[3,25]),
nrow = 13, ncol = 3);
colnames(Table1) = c("Scenario 1", "Scenario 2", "Pct. Difference");
rownames(Table1) = c("Overall Mean Flow",
"Jan. Mean Flow", "Feb. Mean Flow",
"Mar. Mean Flow", "Apr. Mean Flow",
"May Mean Flow", "Jun. Mean Flow",
"Jul. Mean Flow", "Aug. Mean Flow",
"Sep. Mean Flow", "Oct. Mean Flow",
"Nov. Mean Flow", "Dec. Mean Flow");
Table1 <- round(Table1, digits = 2)
Table1 <- kable(format(Table1, digits = 3, drop0trailing = TRUE))
Table2 <- matrix(c(percent_difference[1,2], percent_difference[1,3],
percent_difference[1,4], percent_difference[1,5], percent_difference[1,6],
percent_difference[1,7], percent_difference[1,8], percent_difference[1,9],
percent_difference[1,10], percent_difference[1,11], percent_difference[1,12],
percent_difference[1,13], percent_difference[2,2],
percent_difference[2,3], percent_difference[2,4], percent_difference[2,5],
percent_difference[2,6], percent_difference[2,7], percent_difference[2,8],
percent_difference[2,9], percent_difference[2,10], percent_difference[2,11],
percent_difference[2,12], percent_difference[2,13],
percent_difference[3,2], percent_difference[3,3], percent_difference[3,4],
percent_difference[3,5], percent_difference[3,6], percent_difference[3,7],
percent_difference[3,8], percent_difference[3,9], percent_difference[3,10],
percent_difference[3,11], percent_difference[3,12], percent_difference[3,13]),
nrow = 12, ncol = 3);
colnames(Table2) = c("Scenario 1", "Scenario 2", "Pct. Difference");
rownames(Table2) = c("Jan. Low Flow", "Feb. Low Flow",
"Mar. Low Flow", "Apr. Low Flow",
"May Low Flow", "Jun. Low Flow",
"Jul. Low Flow", "Aug. Low Flow",
"Sep. Low Flow", "Oct. Low Flow",
"Nov. Low Flow", "Dec. Low Flow");
Table2 <- round(Table2, digits = 2)
Table2 <- kable(format(Table2, digits = 3, drop0trailing = TRUE))
# Table 3: Monthly High Flow
Table3 <- matrix(c(percent_difference[1,26], percent_difference[1,27], percent_difference[1,28],percent_difference[1,29], percent_difference[1,30], percent_difference[1,31],percent_difference[1,32], percent_difference[1,33], percent_difference[1,34],percent_difference[1,35], percent_difference[1,36], percent_difference[1,37],percent_difference[2,26],percent_difference[2,27], percent_difference[2,28], percent_difference[2,29],percent_difference[2,30], percent_difference[2,31], percent_difference[2,32],percent_difference[2,33], percent_difference[2,34], percent_difference[2,35],percent_difference[2,36], percent_difference[2,37],percent_difference[3,26], percent_difference[3,27], percent_difference[3,28],percent_difference[3,29], percent_difference[3,30], percent_difference[3,31],percent_difference[3,32], percent_difference[3,33], percent_difference[3,34],percent_difference[3,35], percent_difference[3,36], percent_difference[3,37]),
nrow = 12, ncol = 3);
colnames(Table3) = c("Scenario 1", "Scenario 2", "Pct. Difference");
rownames(Table3) = c("Jan. High Flow", "Feb. High Flow",
"Mar. High Flow", "Apr. High Flow",
"May High Flow", "Jun. High Flow",
"Jul. High Flow", "Aug. High Flow",
"Sep. High Flow", "Oct. High Flow",
"Nov. High Flow", "Dec. High Flow");
Table3 <- round(Table3, digits = 2)
Table3 <- kable(format(Table3, digits = 3, drop0trailing = TRUE))
Table4 <- matrix(c(percent_difference[1,38], percent_difference[1,43],
percent_difference[1,39], percent_difference[1,44],
percent_difference[1,40], percent_difference[1,45],
percent_difference[1,41], percent_difference[1,46],
percent_difference[1,42], percent_difference[1,47],
percent_difference[1,59], percent_difference[1,60],
percent_difference[1,58], percent_difference[1,67],
percent_difference[2,38], percent_difference[2,43],
percent_difference[2,39], percent_difference[2,44],
percent_difference[2,40], percent_difference[2,45],
percent_difference[2,41], percent_difference[2,46],
percent_difference[2,42], percent_difference[2,47],
percent_difference[2,59], percent_difference[2,60],
percent_difference[2,58], percent_difference[2,67],
percent_difference[3,38], percent_difference[3,43],
percent_difference[3,39], percent_difference[3,44],
percent_difference[3,40], percent_difference[3,45],
percent_difference[3,41], percent_difference[3,46],
percent_difference[3,42], percent_difference[3,47],
percent_difference[3,59], percent_difference[3,60],
percent_difference[3,58], percent_difference[3,67]),
nrow = 14, ncol = 3);
colnames(Table4) = c("Scenario 1", "Scenario 2", "Pct. Difference");
rownames(Table4) = c("Min. 1 Day Min", "Med. 1 Day Min",
"Min. 3 Day Min", "Med. 3 Day Min",
"Min. 7 Day Min", "Med. 7 Day Min",
"Min. 30 Day Min", "Med. 30 Day Min",
"Min. 90 Day Min", "Med. 90 Day Min",
"7Q10", "Year of 90-Day Min. Flow",
"Drought Year Mean", "Mean Baseflow");
Table4 <- round(Table4, digits = 2)
Table4 <- kable(format(Table4, digits = 3, drop0trailing = TRUE))
# Table 5: Period High Flows
Table5 <- matrix(c(percent_difference[1,48], percent_difference[1,53],
percent_difference[1,49], percent_difference[1,54],
percent_difference[1,50], percent_difference[1,55],
percent_difference[1,51], percent_difference[1,56],
percent_difference[1,52], percent_difference[1,57],
percent_difference[2,48], percent_difference[2,53],
percent_difference[2,49], percent_difference[2,54],
percent_difference[2,50], percent_difference[2,55],
percent_difference[2,51], percent_difference[2,56],
percent_difference[2,52], percent_difference[2,57],
percent_difference[3,48], percent_difference[3,53],
percent_difference[3,49], percent_difference[3,54],
percent_difference[3,50], percent_difference[3,55],
percent_difference[3,51], percent_difference[3,56],
percent_difference[3,52], percent_difference[3,57]),
nrow = 10, ncol = 3);
colnames(Table5) = c("Scenario 1", "Scenario 2", "Pct. Difference");
rownames(Table5) = c("Max. 1 Day Max", "Med. 1 Day Max",
"Max. 3 Day Max", "Med. 3 Day Max",
"Max. 7 Day Max", "Med. 7 Day Max",
"Max. 30 Day Max", "Med. 30 Day Max",
"Max. 90 Day Max", "Med. 90 Day Max");
Table5 <- round(Table5, digits = 2)
Table5 <- kable(format(Table5, digits = 3, drop0trailing = TRUE))
# Table 6: Non-Exceedance Flows
Table6 <- matrix(c(percent_difference[1,62], percent_difference[1,63], percent_difference[1,64],percent_difference[1,65], percent_difference[1,66], percent_difference[1,61],percent_difference[2,62], percent_difference[2,63], percent_difference[2,64],percent_difference[2,65], percent_difference[2,66], percent_difference[2,61],percent_difference[3,62], percent_difference[3,63], percent_difference[3,64],percent_difference[3,65], percent_difference[3,66], percent_difference[3,61]),
nrow = 6, ncol = 3);
colnames(Table6) = c("Scenario 1", "Scenario 2", "Pct. Difference");
rownames(Table6) = c("1% Non-Exceedance", "5% Non-Exceedance",
"50% Non-Exceedance", "95% Non-Exceedance",
"99% Non-Exceedance", "Sept. 10% Non-Exceedance");
Table6 <- round(Table6, digits = 2)
Table6 <- kable(format(Table6, digits = 3, drop0trailing = TRUE))
Table2
Table1
Table3
Table4
Table5
Table6
# September 10% Flow Calculation DONE
sept_10_flow <- function(data) {
data$year <- year(ymd(data$date))
data$month <- month(ymd(data$date))
data$day <- day(ymd(data$date))
sept_flows <- subset(data, month == '9')
sept_10 <- signif(quantile(sept_flows$flow, 0.10), digits = 3)
return(sept_10)
}
data$year <- year(ymd(data$date))
data$month <- month(ymd(data$date))
data$day <- day(ymd(data$date))
sept_flows <- subset(data, month == '9')
sept_10 <- signif(quantile(sept_flows$flow, 0.10), digits = 3)
return(sept_10)
sept_10_flow(data1)
# Loading Necessary Packages
library(dataRetrieval)
library(lubridate)
library(plyr)
library(zoo)
library(zoo)
library(knitr)
library(stats)
library(lfstat)
library(rstudioapi)
library(IHA)
library(PearsonDS)
library(lfstat)
library(scales)
library(readr)
library(httr)
library(dplyr)
library(stringr)
library(RCurl)
library(rgeos)
library(ggmap)
library(ggsn)
library(sp)
library(rlist)
# INPUTS
riv.seg <- 'JU3_7490_7400'
mod.phase1 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario1 <- 'CFBASE30Y20180615' #or "p532cal_062211" (phase 5)
mod.phase2 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario2 <- 'CBASE1808L55CY55R45P50R45P50Y' #or "p532cal_062211" (phase 5)
start.date <- '1984-01-01'
end.date <- '2000-12-31'
site_number <- '2018000'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
area <- readNWISsite(site_number); area <- area$`drain_area_va` #sq. miles
site_url <- "http://deq2.bse.vt.edu/d.dh"
area <- readNWISsite(site_number); area <- area$`drain_area_va` #sq. miles
site_number <- '02018000'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
area <- readNWISsite('site_number');
# Loading Necessary Packages
library(dataRetrieval)
library(lubridate)
library(plyr)
library(zoo)
library(knitr)
library(ggplot2)
library(stats)
library(lfstat)
library(rstudioapi)
library(IHA)
library(PearsonDS)
library(lfstat)
library(scales)
library(readr)
library(httr)
library(dplyr)
library(stringr)
library(RCurl)
library(rgeos)
library(ggmap)
library(ggsn)
library(sp)
library(rlist)
# INPUTS
riv.seg <- 'JU3_7490_7400'
mod.phase1 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario1 <- 'CFBASE30Y20180615' #or "p532cal_062211" (phase 5)
mod.phase2 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario2 <- 'CBASE1808L55CY55R45P50R45P50Y' #or "p532cal_062211" (phase 5)
start.date <- '1984-01-01'
end.date <- '2000-12-31'
site_number <- '02018000'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
area <- readNWISsite(site_number);
area <- area$`drain_area_va` #sq. miles
area <- area*27878400 #sq ft
# Loading Necessary Packages
library(dataRetrieval)
library(lubridate)
library(plyr)
library(zoo)
library(knitr)
library(ggplot2)
library(stats)
library(lfstat)
library(rstudioapi)
library(IHA)
library(PearsonDS)
library(lfstat)
library(scales)
library(readr)
library(httr)
library(dplyr)
library(stringr)
library(RCurl)
library(rgeos)
library(ggmap)
library(ggsn)
library(sp)
library(rlist)
# INPUTS
riv.seg <- 'JA5_7480_0001'
mod.phase1 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario1 <- 'CFBASE30Y20180615' #or "p532cal_062211" (phase 5)
mod.phase2 <- 'p6/p6_gb604' #or "p532c-sova" (phase 5)
mod.scenario2 <- 'CBASE1808L55CY55R45P50R45P50Y' #or "p532cal_062211" (phase 5)
start.date <- '1984-01-01'
end.date <- '2000-12-31'
site_number <- '02041650'
cbp6_link <- "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
site_url <- "http://deq2.bse.vt.edu/d.dh"
area <- readNWISsite(site_number);
area <- area$`drain_area_va` #sq. miles
area <- area*27878400 #sq ft
data1 <- model_import_data_cfs(riv.seg, mod.phase1, mod.scenario1, start.date, end.date)
container1 ="C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github";
container2 = "C:\\Users\\Kevin D'Andrea\\Desktop\\HARP\\Github\\cbp6\\code";
# Sourcing functions
source(paste0(container2,"/cbp6_functions.R"))
data1 <- model_import_data_cfs(riv.seg, mod.phase1, mod.scenario1, start.date, end.date)
data1 <- model_import_data_cfs(riv.seg, mod.phase1, mod.scenario1, start.date, end.date)
data1 <- water_year_trim(data1)
data1 <- water_year_trim(data1)
data <- data1
low_yearly_mean(data)
#setup
data$year <- year(ymd(data$date))
data$month <- month(ymd(data$date))
data$day <- day(ymd(data$date))
flows_model1 <- zoo(data$flow, order.by = data$date)
DoR <- fn_iha_DOR_Year(flows_model1);
model1.data <- data.frame(data$day, data$month, data$year, data$flow)
names(model1.data) <- c('day', 'month', 'year', 'flow')
model1river <- createlfobj(model1.data, hyearstart = 10, baseflow = TRUE, meta = NULL)
lf_model <- aggregate(model1river$flow, by = list(model1river$hyear), FUN = mean)
colnames(lf_model) <- c('Water_Year', 'Mean_Flow')
#calculation
lf_model_flow <- signif(as.numeric(which(lf_model$'Water_Year' == DoR), digits = 3))
lf_model <- lf_model[lf_model_flow,2]
#setup
data$year <- year(ymd(data$date))
data$month <- month(ymd(data$date))
data$day <- day(ymd(data$date))
flows_model1 <- zoo(data$flow, order.by = data$date)
DoR <- fn_iha_DOR_Year(flows_model1);
model1.data <- data.frame(data$day, data$month, data$year, data$flow)
names(model1.data) <- c('day', 'month', 'year', 'flow')
model1river <- createlfobj(model1.data, hyearstart = 10, baseflow = TRUE, meta = NULL)
lf_model <- aggregate(model1river$flow, by = list(model1river$hyear), FUN = mean)
colnames(lf_model) <- c('Water_Year', 'Mean_Flow')
#calculation
lf_model_flow <- as.numeric(which(lf_model$'Water_Year' == DoR))
lf_model <- signif(lf_model[lf_model_flow,2], digits = 3)
